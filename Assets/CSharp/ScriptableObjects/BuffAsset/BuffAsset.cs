using System;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using static LevelStatAsset;
using static LevelStatInfoManager;
using static StatScript;

[CreateAssetMenu(fileName = "BuffAsset", menuName = "Scriptable Object/Create_BuffAsset", order = (int)MyUtil.CustomToolOrder.CreateBuffs)]
public class BuffAsset : ScriptableObject
{
    /*------------------------------------------------------------
    |NOTI| 동일 이름의 버프린데 레벨만 다르다 => 그래도 다른 버프키다
    ------------------------------------------------------------*/
    [Serializable]
    public class BuffActionWrapper
    {
        public DamagingProcessDelegateType _delegateTiming = DamagingProcessDelegateType.End;
        public BuffAction _buffActionType = BuffAction.None;
    }

    [Serializable]
    public class BuffApplyWork
    {
        public enum BuffApplyType
        {
            //0. Set (강제로 고정시킨다)
            Set, //이 값이 있으면 이후 값들이 무시된다

            //1. 상수값 증가
            Plus,
            Minus,

            //2. 퍼센테이지 증가
            PercentagePlus,
            PercentageMinus,

            //3. 곱증가
            Multiply,
            Devide,

            End,
        }

        public BuffActionWrapper _buffAction = new BuffActionWrapper();
        public PassiveStat _targetType = PassiveStat.MaxHP;
        public BuffApplyType _buffApplyType = BuffApplyType.Plus;
        public float _amount = 0.0f;
    }


    //[SerializeField] private int _buffKey = 0;
    //public int _BuffKey => _buffKey;
    public int _buffKey = 0;

    [SerializeField] private string _buffName = "";
    public string _BuffName => _buffName;




    //--------------------------------------------------------------
    //--------------------------------------------------------------
    //
    //
    //최대 중첩 가능 개수
    [SerializeField] private int _maxCount = 1;
    public int _MaxCount => _maxCount;

    //동일 버프 중첩시 지속시간 초기화 여부(duration이 존재할 때)
    [SerializeField] private bool _refresh = true;
    public bool _Refresh => _refresh;

    //지속시간 만료시 한번에 삭제 여부(duration이 존재할 때)
    [SerializeField] private bool _durationExpireOnce = true;
    public bool _DurationExpireOnce => _durationExpireOnce;

    //이건 없어져야 하는데...
    [SerializeField] private bool _specialAction_OnlyOne = false;
    public bool _SpecialAction_OnlyOne => _specialAction_OnlyOne;
    //
    //
    //--------------------------------------------------------------
    //--------------------------------------------------------------




    [SerializeField] private List<BuffApplyWork> _buffWorks = new List<BuffApplyWork>();
    public List<BuffApplyWork> _BuffWorks => _buffWorks;

    [SerializeField] private bool _isDebuff = false;
    public bool _IsDebuff => _isDebuff;

    [SerializeField] private float _duration = 100.0f;
    public float _Duration => _duration;

    [SerializeField] private Image _buffUIImage = null;
    public Image _BuffUIImage => _buffUIImage;
}